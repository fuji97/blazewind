name: pre-release

on:
  push:
    branches: [ "main" ]

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_NOLOGO: true
  BLAZEWIND_PROJECT_PATH: ./src/Blazewind/
  PACKAGES_PATH: ${{ github.workspace }}/nuget
  USERNAME: fuji97
  NAMESPACE: fuji97
  REPO: fuji97/blazewind

jobs:
  build:
    runs-on: ubuntu-latest
    outputs: 
      version: ${{ steps.current-version.outputs.tag }}-${{ github.run_number }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Get version
        id: current-version
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
        with:
          prefix: 'v'
          fallback: 0.0.1
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0.x'
      - name: Restore NPM
        uses: ./.github/actions/restore-npm/
        with:
          path: ${{ env.BLAZEWIND_PROJECT_PATH }}
      - name: Restore dependencies
        working-directory: ${{ env.BLAZEWIND_PROJECT_PATH }}
        run: dotnet restore
      - name: Run tests
        working-directory: ${{ env.BLAZEWIND_PROJECT_PATH }}
        run: dotnet test --no-restore --configuration Release
      - name: Pack package
        working-directory: ${{ env.BLAZEWIND_PROJECT_PATH }}
        run: dotnet pack --no-restore -c Release -o ${{ env.PACKAGES_PATH }} -p:Version=${{ steps.current-version.outputs.tag }}-${{ github.run_number }}
      - name: Publish artifacts
        uses: actions/upload-artifact@v3
        with:
          name: blazewind
          path: ${{ env.PACKAGES_PATH }}
          retention-days: 30
  
  release-packages:
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: blazewind
          path: ${{ env.PACKAGES_PATH }}
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0.x'
      - name: Publish NuGet package
        run: |
          dotnet nuget add source --username ${{ env.USERNAME }} --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/${{ env.NAMESPACE }}/index.json"
          for file in $(find "${{ env.PACKAGES_PATH }}" -type f -name "*.nupkg"); do
              dotnet nuget push $file --api-key "${{ secrets.NUGET_APIKEY }}" --source github --skip-duplicate
          done