name: release

on:
  push:
    branches: [ "main" ]

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_NOLOGO: true
  BLAZEWIND_PROJECT_PATH: ./src/Blazewind/
  PACKAGES_PATH: ${{ github.workspace}}/nuget
  USERNAME: fuji97
  NAMESPACE: fuji97
  REPO: fuji97/blazewind

jobs:
  build:
    runs-on: ubuntu-latest
    outputs: 
      version_type: ${{ steps.get-version.outputs.version_type }}
      version_string: ${{ steps.version-string.outputs }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Get version
        id: get-version
        uses: paulhatch/semantic-version@v5.0.3
        with:
          tag_prefix: "v"
          enable_prerelease_mode: true
          version_format: "${major}.${minor}.${patch}-${increment}"
      - name: Get version string
        id: version-string
        uses: ./.github/actions/get-version-string/
        with:
          version_type: ${{ steps.get-version.outputs.version_type }}
          major: ${{ steps.get-version.outputs.major }}
          minor: ${{ steps.get-version.outputs.minor }}
          patch: ${{ steps.get-version.outputs.patch }}
          increment: ${{ steps.get-version.outputs.increment }}
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0.x'
      - name: Restore NPM
        uses: ./.github/actions/restore-npm/
        with:
          path: ${{ env.BLAZEWIND_PROJECT_PATH }}
      - name: Restore dependencies
        working-directory: ${{ env.BLAZEWIND_PROJECT_PATH }}
        run: dotnet restore
      - name: Run tests
        working-directory: ${{ env.BLAZEWIND_PROJECT_PATH }}
        run: dotnet test --no-restore --configuration Release
      - name: Pack package
        working-directory: ${{ env.BLAZEWIND_PROJECT_PATH }}
        run: dotnet pack --no-restore -c Release -o ${{ env.PACKAGES_PATH }} -p:Version=${{ steps.version_string.outputs.version }}
      - name: Publish artifacts
        uses: actions/upload-artifact@v3
        with:
          name: blazewind
          path: ${{ env.BLAZEWIND_BUILD_PATH }}
          retention-days: 30
  
  release-packages:
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: blazewind
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0.x'
      - name: Publish NuGet package
        run: |
          dotnet nuget add source --username ${{ env.USERNAME }} --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/${{ env.NAMESPACE }}/index.json"
          foreach($file in (Get-ChildItem "${{ env.PACKAGES_PATH }}" -Recurse -Include *.nupkg)) {
              dotnet nuget push $file --source github --skip-duplicate
          }

  release-nuget:
    runs-on: ubuntu-latest
    needs: [ build ]
    if: needs.build.outputs.version_type != 'none'
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: blazewind
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0.x'
      - name: Publish NuGet package
        run: |
          foreach($file in (Get-ChildItem "${{ env.PACKAGES_PATH }}" -Recurse -Include *.nupkg)) {
              dotnet nuget push $file --api-key "${{ secrets.NUGET_APIKEY }}" --source https://api.nuget.org/v3/index.json --skip-duplicate
          }
          
  create-release:
    runs-on: ubuntu-latest
    needs: [build, release-nuget]
    if: needs.build.outputs.version_type != 'none'
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: blazewind

      - name: Create release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          automatic_release_tag: "v${{ needs.build.outputs.version_string.version }}"